{"ast":null,"code":"import { createStore } from 'redux'; // step-1 i import createStore from redux\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    inc(state) {\n      state.counter++;\n    },\n    dcr(state) {\n      state.counter--;\n    },\n    inc5(state, action) {\n      state.count;\n    },\n    toggle() {}\n  }\n});\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // step-3 Create Reducer\n  if (action.type === 'inc') {\n    return {\n      counter: state.counter + 1,\n      // create a new object in Reducer\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'icr5') {\n    return {\n      counter: state.counter + action.high,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'dcr') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer); // step -2 assin createStore to identify store, //  step-4 keep reducer into store\n\nexport default store; // step-5 export 1 store  // nxt to index.js to provide data from store","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","inc","state","dcr","inc5","action","count","toggle","counterReducer","arguments","length","undefined","type","high","store"],"sources":["D:/Fullstack Training/React/Udemy Redux/01-starting-project/src/store/storeindex.js"],"sourcesContent":["import { createStore } from 'redux'; // step-1 i import createStore from redux\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = { counter: 0, showCounter: true }\r\n\r\ncreateSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        inc(state) {\r\n            state.counter++;\r\n        },\r\n        dcr(state) {\r\n            state.counter--;\r\n        },\r\n        inc5(state, action) {\r\n            state.count\r\n         },\r\n        toggle() { },\r\n    }\r\n\r\n\r\n})\r\n\r\nconst counterReducer = (state = initialState, action) => { // step-3 Create Reducer\r\n    if (action.type === 'inc') {\r\n        return {\r\n            counter: state.counter + 1,  // create a new object in Reducer\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'icr5') {\r\n        return {\r\n            counter: state.counter + action.high,\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'dcr') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'toggle') {\r\n        return {\r\n            showCounter: !state.showCounter,\r\n            counter: state.counter\r\n        }\r\n    }\r\n\r\n    return state\r\n};\r\n\r\n\r\nconst store = createStore(counterReducer) // step -2 assin createStore to identify store, //  step-4 keep reducer into store\r\n\r\nexport default store; // step-5 export 1 store  // nxt to index.js to provide data from store"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO,CAAC,CAAC;AACrC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtDH,WAAW,CAAC;EACRI,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACNC,GAAGA,CAACC,KAAK,EAAE;MACPA,KAAK,CAACL,OAAO,EAAE;IACnB,CAAC;IACDM,GAAGA,CAACD,KAAK,EAAE;MACPA,KAAK,CAACL,OAAO,EAAE;IACnB,CAAC;IACDO,IAAIA,CAACF,KAAK,EAAEG,MAAM,EAAE;MAChBH,KAAK,CAACI,KAAK;IACd,CAAC;IACFC,MAAMA,CAAA,EAAG,CAAE;EACf;AAGJ,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCN,KAAK,GAAAO,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGb,YAAY;EAAA,IAAES,MAAM,GAAAI,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAAO;EACvD,IAAIN,MAAM,CAACO,IAAI,KAAK,KAAK,EAAE;IACvB,OAAO;MACHf,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAAG;MAC7BC,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EAEA,IAAIO,MAAM,CAACO,IAAI,KAAK,MAAM,EAAE;IACxB,OAAO;MACHf,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGQ,MAAM,CAACQ,IAAI;MACpCf,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EAEA,IAAIO,MAAM,CAACO,IAAI,KAAK,KAAK,EAAE;IACvB,OAAO;MACHf,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EAEA,IAAIO,MAAM,CAACO,IAAI,KAAK,QAAQ,EAAE;IAC1B,OAAO;MACHd,WAAW,EAAE,CAACI,KAAK,CAACJ,WAAW;MAC/BD,OAAO,EAAEK,KAAK,CAACL;IACnB,CAAC;EACL;EAEA,OAAOK,KAAK;AAChB,CAAC;AAGD,MAAMY,KAAK,GAAGpB,WAAW,CAACc,cAAc,CAAC,EAAC;;AAE1C,eAAeM,KAAK,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit'; // step-1 i import createStore from redux\n\nimport counterSlice from './counter';\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n}); // step -2 assin createStore to identify store, //  step-4 keep reducer into store\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store; // step-5 export 1 store  // nxt to index.js to provide data from store\n\n/* const counterReducer = (state = initialState, action) => { // step-3 Create Reducer\r\n    if (action.type === 'inc') {\r\n        return {\r\n            counter: state.counter + 1,  // create a new object in Reducer\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'icr5') {\r\n        return {\r\n            counter: state.counter + action.high,\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'dcr') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'toggle') {\r\n        return {\r\n            showCounter: !state.showCounter,\r\n            counter: state.counter\r\n        }\r\n    }\r\n\r\n    return state\r\n}; */","map":{"version":3,"names":["configureStore","counterSlice","store","reducer","counter","auth","authSlice","counterActions","actions","authActions"],"sources":["D:/Fullstack Training/React/Udemy Redux/01-starting-project/src/store/storeindex.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'; // step-1 i import createStore from redux\r\n\r\nimport counterSlice from './counter';\r\n\r\nconst store = configureStore({\r\n    reducer: { counter: counterSlice.reducer, auth: authSlice.reducer }\r\n}); // step -2 assin createStore to identify store, //  step-4 keep reducer into store\r\n\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store; // step-5 export 1 store  // nxt to index.js to provide data from store\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* const counterReducer = (state = initialState, action) => { // step-3 Create Reducer\r\n    if (action.type === 'inc') {\r\n        return {\r\n            counter: state.counter + 1,  // create a new object in Reducer\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'icr5') {\r\n        return {\r\n            counter: state.counter + action.high,\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'dcr') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'toggle') {\r\n        return {\r\n            showCounter: !state.showCounter,\r\n            counter: state.counter\r\n        }\r\n    }\r\n\r\n    return state\r\n}; */"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB,CAAC,CAAC;;AAEnD,OAAOC,YAAY,MAAM,WAAW;AAEpC,MAAMC,KAAK,GAAGF,cAAc,CAAC;EACzBG,OAAO,EAAE;IAAEC,OAAO,EAAEH,YAAY,CAACE,OAAO;IAAEE,IAAI,EAAEC,SAAS,CAACH;EAAQ;AACtE,CAAC,CAAC,CAAC,CAAC;;AAGJ,OAAO,MAAMI,cAAc,GAAGN,YAAY,CAACO,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGH,SAAS,CAACE,OAAO;AAE5C,eAAeN,KAAK,CAAC,CAAC;;AAiBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
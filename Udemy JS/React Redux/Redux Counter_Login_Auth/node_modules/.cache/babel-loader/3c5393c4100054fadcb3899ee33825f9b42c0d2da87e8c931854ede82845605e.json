{"ast":null,"code":"// import { createStore } from 'redux'; // step-1 i import createStore from redux\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    inc(state) {\n      state.counter++;\n    },\n    dcr(state) {\n      state.counter--;\n    },\n    inc5(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // step-3 Create Reducer\n  if (action.type === 'inc') {\n    return {\n      counter: state.counter + 1,\n      // create a new object in Reducer\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'icr5') {\n    return {\n      counter: state.counter + action.high,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'dcr') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\nconst store = c(counterSlice.reducer); // step -2 assin createStore to identify store, //  step-4 keep reducer into store\n\nexport default store; // step-5 export 1 store  // nxt to index.js to provide data from store","map":{"version":3,"names":["createSlice","initialState","counter","showCounter","counterSlice","name","reducers","inc","state","dcr","inc5","action","amount","toggle","counterReducer","arguments","length","undefined","type","high","store","c","reducer"],"sources":["D:/Fullstack Training/React/Udemy Redux/01-starting-project/src/store/storeindex.js"],"sourcesContent":["// import { createStore } from 'redux'; // step-1 i import createStore from redux\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = { counter: 0, showCounter: true }\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        inc(state) {\r\n            state.counter++;\r\n        },\r\n\r\n        dcr(state) {\r\n            state.counter--;\r\n        },\r\n\r\n        inc5(state, action) {\r\n            state.counter = state.counter + action.amount\r\n        },\r\n\r\n        toggle(state) {\r\n            state.showCounter = !state.showCounter\r\n        }\r\n    }\r\n})\r\n\r\nconst counterReducer = (state = initialState, action) => { // step-3 Create Reducer\r\n    if (action.type === 'inc') {\r\n        return {\r\n            counter: state.counter + 1,  // create a new object in Reducer\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'icr5') {\r\n        return {\r\n            counter: state.counter + action.high,\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'dcr') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'toggle') {\r\n        return {\r\n            showCounter: !state.showCounter,\r\n            counter: state.counter\r\n        }\r\n    }\r\n\r\n    return state\r\n};\r\n\r\n\r\nconst store = c(counterSlice.reducer) // step -2 assin createStore to identify store, //  step-4 keep reducer into store\r\n\r\nexport default store; // step-5 export 1 store  // nxt to index.js to provide data from store"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACNC,GAAGA,CAACC,KAAK,EAAE;MACPA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IAEDO,GAAGA,CAACD,KAAK,EAAE;MACPA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IAEDQ,IAAIA,CAACF,KAAK,EAAEG,MAAM,EAAE;MAChBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;IACjD,CAAC;IAEDC,MAAMA,CAACL,KAAK,EAAE;MACVA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMW,cAAc,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCN,KAAK,GAAAO,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGd,YAAY;EAAA,IAAEU,MAAM,GAAAI,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAAO;EACvD,IAAIN,MAAM,CAACO,IAAI,KAAK,KAAK,EAAE;IACvB,OAAO;MACHhB,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAG,CAAC;MAAG;MAC7BC,WAAW,EAAEK,KAAK,CAACL;IACvB,CAAC;EACL;EAEA,IAAIQ,MAAM,CAACO,IAAI,KAAK,MAAM,EAAE;IACxB,OAAO;MACHhB,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACQ,IAAI;MACpChB,WAAW,EAAEK,KAAK,CAACL;IACvB,CAAC;EACL;EAEA,IAAIQ,MAAM,CAACO,IAAI,KAAK,KAAK,EAAE;IACvB,OAAO;MACHhB,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEK,KAAK,CAACL;IACvB,CAAC;EACL;EAEA,IAAIQ,MAAM,CAACO,IAAI,KAAK,QAAQ,EAAE;IAC1B,OAAO;MACHf,WAAW,EAAE,CAACK,KAAK,CAACL,WAAW;MAC/BD,OAAO,EAAEM,KAAK,CAACN;IACnB,CAAC;EACL;EAEA,OAAOM,KAAK;AAChB,CAAC;AAGD,MAAMY,KAAK,GAAGC,CAAC,CAACjB,YAAY,CAACkB,OAAO,CAAC,EAAC;;AAEtC,eAAeF,KAAK,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}